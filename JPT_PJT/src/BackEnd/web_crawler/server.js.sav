import express from 'express';
import bodyParser from 'body-parser';
import path from 'path';
import { spawn } from 'child_process';
import { fileURLToPath } from 'url';
import axios from 'axios'

class Server{
  constructor(){
    this.app = express();
    this.configureMiddleware();
    this.setupRoutes();
  }

  configureMiddleware(){
    this.app.use(bodyParser.json());
  }

  setupRoutes(){
    this.app.get('/', (req, res) => this.handleRoot(req, res));
    this.app.post('/search', (req, res) => this.handleTarget(req, res));
    this.app.get('/catch',(req,res) => this.get_companyInfo(req, res))
  }

  handleRoot(req, res) {
    console.log('hello_world');
    res.send('Hello_world');
  }

  handleTarget(req, res) {
    const { target, service_code } = req.body;
    // 절대경로로 module을 찾음
    const currentModulePath = fileURLToPath(import.meta.url);
    const currentModuleDir = path.dirname(currentModulePath);
    
    const addScriptPath = path.join(currentModuleDir, 'py_module', 'module.py');
    const pythonProcess = spawn('python', [addScriptPath, target, service_code]);

    pythonProcess.stdout.on('data', (data) => {
      const URLs = data.toString();
      res.json({ URLs });
    });

    pythonProcess.stderr.on('data', (data) => {
      console.error(`stderr: ${data}`);
      res.status(500).send('Error occurred while executing Python script');
    });

    pythonProcess.on('close', (code) => {
      console.log(`Python process exited with code ${code}`);
    });
  }

  get_companyInfo(req, res){
    const CATCH_API_URL="https://www.catch.co.kr/apiGuide/guide/openAPIGuide/apiCompList"
    const CATCH_API_KEY="OKi0USF3nvPj8a7RqbTErJqAeUNEt0YnkpKixpoEB2QcQ"
  }

  start(port = 3000) {
    const PORT = process.env.PORT || port;
    this.app.listen(PORT, () => {
      console.log(`Server started on port ${PORT}`);
    });
  }
}

// 서버 인스턴스를 생성하고 시작합니다.
const server = new Server();
server.start();